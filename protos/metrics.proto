syntax = "proto3";

package metrics;

import "common.proto";

service MetricsService {
  rpc CollectMetrics (CollectMetricsRequest) returns (CollectMetricsResponse) {}
  rpc GetMetrics (GetMetricsRequest) returns (GetMetricsResponse) {}
  rpc GenerateReport (GenerateReportRequest) returns (GenerateReportResponse) {}
}

message CollectMetricsRequest {
  string source = 1;
  string event_type = 2;
  bytes data = 3;
  string timestamp = 4;
}

message CollectMetricsResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
  // Alternative using common message
  // common.StandardResponse response = 1;
}

message GetMetricsRequest {
  string source = 1;
  string event_type = 2;
  common.DateRange date_range = 3;
  int32 limit = 5;
  int32 offset = 6;
  // Alternative using common message
  // common.FilterOptions filter_options = 7;
}

message GetMetricsResponse {
  bool success = 1;
  repeated MetricData metrics = 2;
  int32 total_count = 3;
  string error = 4;
  common.PaginationInfo pagination = 5;
}

message MetricData {
  string id = 1;
  string source = 2;
  string event_type = 3;
  bytes data = 4;
  string timestamp = 5;
}

message GenerateReportRequest {
  string report_type = 1;
  common.DateRange date_range = 2;
  string format = 3; // e.g., "json", "csv"
  map<string, string> parameters = 4;
}

message GenerateReportResponse {
  bool success = 1;
  string report_id = 2;
  bytes report_data = 3;
  string error = 4;
  common.FileInfo file_info = 5;
}
